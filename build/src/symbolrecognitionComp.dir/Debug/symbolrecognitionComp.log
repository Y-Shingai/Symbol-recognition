  Building Custom Rule C:/Users/新階幸也/workspace/Symbol recognition/src/CMakeLists.txt
  CMake does not need to re-run because C:\Users\譁ｰ髫主ｹｸ荵歃workspace\Symbol recognition\build\src\CMakeFiles\generate.stamp is up-to-date.
  symbolrecognitionComp.cpp
C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/InPortBase.h(599): warning C4290: C++ の例外の指定は無視されます。関数が __declspec(nothrow) でないことのみ表示されます。
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(424): warning C4251: 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::m_creators': class 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' は __export キーワードを使って class 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>' にエクスポートしてください。
          with
          [
              AbstractClass=RTC::InPortConsumer,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&)
          ]
          and
          [
              Identifier=std::string,
              AbstractClass=RTC::InPortConsumer,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::InPortConsumer,std::string,std::less<std::string>,RTC::InPortConsumer *(__cdecl *)(void),void (__cdecl *)(RTC::InPortConsumer *&)>::FactoryEntry
          ]
          and
          [
              AbstractClass=RTC::InPortConsumer,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&)
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(109): note: 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' の宣言を確認してください
          with
          [
              Identifier=std::string,
              AbstractClass=RTC::InPortConsumer,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::InPortConsumer,std::string,std::less<std::string>,RTC::InPortConsumer *(__cdecl *)(void),void (__cdecl *)(RTC::InPortConsumer *&)>::FactoryEntry
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/InPortConsumer.h(258): note: コンパイル対象のクラス テンプレート インスタンス化 'coil::GlobalFactory<RTC::InPortConsumer,std::string,std::less<_Kty>,AbstractClass *(__cdecl *)(void),void (__cdecl *)(AbstractClass *&)>' のリファレンスを確認してください
          with
          [
              _Kty=std::string,
              AbstractClass=RTC::InPortConsumer
          ]
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(424): warning C4251: 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::m_creators': class 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' は __export キーワードを使って class 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>' にエクスポートしてください。
          with
          [
              AbstractClass=RTC::OutPortProvider,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&)
          ]
          and
          [
              Identifier=std::string,
              AbstractClass=RTC::OutPortProvider,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::OutPortProvider,std::string,std::less<std::string>,RTC::OutPortProvider *(__cdecl *)(void),void (__cdecl *)(RTC::OutPortProvider *&)>::FactoryEntry
          ]
          and
          [
              AbstractClass=RTC::OutPortProvider,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&)
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(109): note: 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' の宣言を確認してください
          with
          [
              Identifier=std::string,
              AbstractClass=RTC::OutPortProvider,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::OutPortProvider,std::string,std::less<std::string>,RTC::OutPortProvider *(__cdecl *)(void),void (__cdecl *)(RTC::OutPortProvider *&)>::FactoryEntry
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/OutPortProvider.h(551): note: コンパイル対象のクラス テンプレート インスタンス化 'coil::GlobalFactory<RTC::OutPortProvider,std::string,std::less<_Kty>,AbstractClass *(__cdecl *)(void),void (__cdecl *)(AbstractClass *&)>' のリファレンスを確認してください
          with
          [
              _Kty=std::string,
              AbstractClass=RTC::OutPortProvider
          ]
C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/OutPortBase.h(777): warning C4290: C++ の例外の指定は無視されます。関数が __declspec(nothrow) でないことのみ表示されます。
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/OS.h(92): warning C4996: 'GetVersionExA': が古い形式として宣言されました。
  C:\Program Files (x86)\Windows Kits\8.1\Include\um\sysinfoapi.h(433): note: 'GetVersionExA' の宣言を確認してください
  symbolrecognition.cpp
C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/InPortBase.h(599): warning C4290: C++ の例外の指定は無視されます。関数が __declspec(nothrow) でないことのみ表示されます。
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(424): warning C4251: 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::m_creators': class 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' は __export キーワードを使って class 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>' にエクスポートしてください。
          with
          [
              AbstractClass=RTC::InPortConsumer,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&)
          ]
          and
          [
              Identifier=std::string,
              AbstractClass=RTC::InPortConsumer,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::InPortConsumer,std::string,std::less<std::string>,RTC::InPortConsumer *(__cdecl *)(void),void (__cdecl *)(RTC::InPortConsumer *&)>::FactoryEntry
          ]
          and
          [
              AbstractClass=RTC::InPortConsumer,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&)
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(109): note: 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' の宣言を確認してください
          with
          [
              Identifier=std::string,
              AbstractClass=RTC::InPortConsumer,
              Compare=std::less<std::string>,
              Creator=RTC::InPortConsumer *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::InPortConsumer *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::InPortConsumer,std::string,std::less<std::string>,RTC::InPortConsumer *(__cdecl *)(void),void (__cdecl *)(RTC::InPortConsumer *&)>::FactoryEntry
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/InPortConsumer.h(258): note: コンパイル対象のクラス テンプレート インスタンス化 'coil::GlobalFactory<RTC::InPortConsumer,std::string,std::less<_Kty>,AbstractClass *(__cdecl *)(void),void (__cdecl *)(AbstractClass *&)>' のリファレンスを確認してください
          with
          [
              _Kty=std::string,
              AbstractClass=RTC::InPortConsumer
          ]
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(424): warning C4251: 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::m_creators': class 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' は __export キーワードを使って class 'coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>' にエクスポートしてください。
          with
          [
              AbstractClass=RTC::OutPortProvider,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&)
          ]
          and
          [
              Identifier=std::string,
              AbstractClass=RTC::OutPortProvider,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::OutPortProvider,std::string,std::less<std::string>,RTC::OutPortProvider *(__cdecl *)(void),void (__cdecl *)(RTC::OutPortProvider *&)>::FactoryEntry
          ]
          and
          [
              AbstractClass=RTC::OutPortProvider,
              Identifier=std::string,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&)
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/Factory.h(109): note: 'std::map<Identifier,coil::Factory<AbstractClass,Identifier,Compare,Creator,Destructor>::FactoryEntry,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' の宣言を確認してください
          with
          [
              Identifier=std::string,
              AbstractClass=RTC::OutPortProvider,
              Compare=std::less<std::string>,
              Creator=RTC::OutPortProvider *(__cdecl *)(void),
              Destructor=void (__cdecl *)(RTC::OutPortProvider *&),
              _Kty=std::string,
              _Ty=coil::Factory<RTC::OutPortProvider,std::string,std::less<std::string>,RTC::OutPortProvider *(__cdecl *)(void),void (__cdecl *)(RTC::OutPortProvider *&)>::FactoryEntry
          ]
  C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/OutPortProvider.h(551): note: コンパイル対象のクラス テンプレート インスタンス化 'coil::GlobalFactory<RTC::OutPortProvider,std::string,std::less<_Kty>,AbstractClass *(__cdecl *)(void),void (__cdecl *)(AbstractClass *&)>' のリファレンスを確認してください
          with
          [
              _Kty=std::string,
              AbstractClass=RTC::OutPortProvider
          ]
C:\Program Files (x86)\OpenRTM-aist\1.1.2\rtm/OutPortBase.h(777): warning C4290: C++ の例外の指定は無視されます。関数が __declspec(nothrow) でないことのみ表示されます。
C:\Program Files (x86)\OpenRTM-aist\1.1.2\coil/OS.h(92): warning C4996: 'GetVersionExA': が古い形式として宣言されました。
  C:\Program Files (x86)\Windows Kits\8.1\Include\um\sysinfoapi.h(433): note: 'GetVersionExA' の宣言を確認してください
  コードを生成中...
     ライブラリ C:/Users/新階幸也/workspace/Symbol recognition/build/src/Debug/symbolrecognitionComp.lib とオブジェクト C:/Users/新階幸也/workspace/Symbol recognition/build/src/Debug/symbolrecognitionComp.exp を作成中
  symbolrecognitionComp.vcxproj -> C:\Users\新階幸也\workspace\Symbol recognition\build\src\Debug\symbolrecognitionComp.exe
